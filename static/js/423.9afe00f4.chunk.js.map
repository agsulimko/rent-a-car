{"version":3,"file":"static/js/423.9afe00f4.chunk.js","mappings":"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","sources":["components/Catalog/CatalogItem.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container } from \"styles/Container/Container\";\nimport {\n  ButtonHeardIcone,\n  ButtonLoadMore,\n  ButtonLearnMore,\n  CardItem,\n  CardList,\n  CardsTitle,\n  Img,\n  DivImg,\n  DivTextInfo,\n  SpanCardsTitle,\n  DivTitle,\n  PriceTitle,\n  Vector,\n  DivFirst,\n  DivSecond,\n  SvgHeard,\n  SvgHeardActive,\n  ButtonToUp,\n} from \"./CatalogItem.styled\";\n\nimport substringsToCheck from \"./substringsToCheck\";\nimport sprite from \"../../image/sprite.svg\";\n// const array = [9582, 9590, 9597, 9583];\nconst ITEMS_PER_PAGE = 12;\nconst CatalogItem = ({\n  arrayRentalPrice,\n  currentItems,\n  handleLoadMore,\n  handleLearnMore,\n  handleReloadComponent,\n  currentPage,\n}) => {\n  const [favorites, setFavorites] = useState(\n    JSON.parse(localStorage.getItem(\"favorites\")) || []\n  );\n\n  const toggleFavorites = (id) => {\n    const updatedFavorites = favorites.includes(id)\n      ? favorites.filter((favoriteId) => favoriteId !== id)\n      : [...favorites, id];\n\n    setFavorites(updatedFavorites);\n\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n  };\n  console.log(arrayRentalPrice);\n  return (\n    <Container>\n      <div className=\"div-cards-list\">\n        <CardList className=\"cards-list\">\n          {arrayRentalPrice.length === 0\n            ? currentItems.map((cart, index) => (\n                <CardItem\n                  key={index}\n                  className=\"cards-item\"\n                  data-category={cart.category}\n                  data-aos=\"flip-left\"\n                  data-aos-duration=\"1000\"\n                >\n                  <picture>\n                    <source srcSet={cart.make} type=\"image/webp\" />\n                    <source srcSet={cart.make} type=\"image/jpeg\" />\n                    <DivImg>\n                      <Img\n                        src={cart.img}\n                        width=\"401\"\n                        height=\"268\"\n                        alt={cart.make}\n                        className=\"card-img\"\n                        loading=\"lazy\"\n                      />\n                    </DivImg>\n                  </picture>\n                  <div className=\"test-div\">\n                    <ButtonHeardIcone\n                      type=\"button\"\n                      className=\"btn-heard-icone\"\n                      onClick={() => toggleFavorites(cart.id)}\n                    >\n                      {favorites.includes(cart.id) ? (\n                        <SvgHeardActive>\n                          <use href={`${sprite}#icon-heard_active`}></use>\n                        </SvgHeardActive>\n                      ) : (\n                        <SvgHeard>\n                          <use href={`${sprite}#icon-heard`}></use>\n                        </SvgHeard>\n                      )}\n                    </ButtonHeardIcone>\n                  </div>\n                  <DivTitle className=\"DivTitle\">\n                    <CardsTitle className=\"cards-item-title\">\n                      {cart.make}\n                      {cart.model.length < 8 && (\n                        <SpanCardsTitle> {cart.model}</SpanCardsTitle>\n                      )}\n                      , {cart.year}\n                    </CardsTitle>\n                    <PriceTitle>{cart.rentalPrice}</PriceTitle>\n                  </DivTitle>\n\n                  <DivTextInfo className=\"div-text-info\">\n                    <DivFirst className=\"DivFirst \">\n                      <p className=\"City\">\n                        {cart.address.split(\",\")[1].trim().split(\" \")[0]}\n                      </p>\n                      <Vector></Vector>\n                      <p className=\"Country\">\n                        {\n                          cart.address\n                            .split(\",\")\n                            .slice(2)\n                            .join(\",\")\n                            .trim()\n                            .split(\" \")[0]\n                        }\n                      </p>\n                      <Vector></Vector>\n                      <p className=\"rentalCompany\">{cart.rentalCompany}</p>\n                      {cart.rentalCompany.length < 19 && <Vector></Vector>}\n\n                      {cart.rentalCompany.length < 19 && (\n                        <p className=\"Class auto\">\n                          {cart.accessories\n                            .map((feature) =>\n                              feature.toLowerCase().includes(\"premium\")\n                                ? \"Premium\"\n                                : \"\"\n                            )\n                            .find((str) => str === \"Premium\") || \"\"}\n                        </p>\n                      )}\n                    </DivFirst>\n                    <DivSecond className=\"DivSecond \">\n                      <p> {cart.type} </p>\n                      <Vector></Vector>\n                      <p> {cart.make} </p>\n                      <Vector></Vector>\n                      <p> {cart.id} </p>\n                      {cart.type.length < 6 && <Vector></Vector>}\n                      {cart.type.length < 6 && (\n                        <p>\n                          {cart.accessories\n                            .map((feature) => {\n                              const foundSubstring = substringsToCheck.find(\n                                (substring) =>\n                                  feature\n                                    .toLowerCase()\n                                    .includes(substring.toLowerCase())\n                              );\n\n                              return foundSubstring\n                                ? foundSubstring.charAt(0).toUpperCase() +\n                                    foundSubstring.slice(1)\n                                : \"\";\n                            })\n                            .filter(Boolean)[0] || \"\"}\n                        </p>\n                      )}\n                    </DivSecond>\n                  </DivTextInfo>\n\n                  <ButtonLearnMore\n                    type=\"button\"\n                    className=\"cards-item-btn\"\n                    aria-label=\"Open modal Learn more\"\n                    id={cart.id}\n                    onClick={() => {\n                      handleLearnMore(cart.id);\n                    }}\n                  >\n                    Learn more\n                  </ButtonLearnMore>\n                </CardItem>\n              ))\n            : currentItems\n                .filter((cart) => arrayRentalPrice.includes(cart.id))\n                .map((cart, index) => (\n                  <CardItem\n                    key={index}\n                    className=\"cards-item\"\n                    data-category={cart.category}\n                    data-aos=\"flip-left\"\n                    data-aos-duration=\"1000\"\n                  >\n                    <picture>\n                      <source srcSet={cart.make} type=\"image/webp\" />\n                      <source srcSet={cart.make} type=\"image/jpeg\" />\n                      <DivImg>\n                        <Img\n                          src={cart.img}\n                          width=\"401\"\n                          height=\"268\"\n                          alt={cart.make}\n                          className=\"card-img\"\n                          loading=\"lazy\"\n                        />\n                      </DivImg>\n                    </picture>\n                    <div className=\"test-div\">\n                      <ButtonHeardIcone\n                        type=\"button\"\n                        className=\"btn-heard-icone\"\n                        onClick={() => toggleFavorites(cart.id)}\n                      >\n                        {favorites.includes(cart.id) ? (\n                          <SvgHeardActive>\n                            <use href={`${sprite}#icon-heard_active`}></use>\n                          </SvgHeardActive>\n                        ) : (\n                          <SvgHeard>\n                            <use href={`${sprite}#icon-heard`}></use>\n                          </SvgHeard>\n                        )}\n                      </ButtonHeardIcone>\n                    </div>\n                    <DivTitle className=\"DivTitle\">\n                      <CardsTitle className=\"cards-item-title\">\n                        {cart.make}\n                        {cart.model.length < 8 && (\n                          <SpanCardsTitle> {cart.model}</SpanCardsTitle>\n                        )}\n                        , {cart.year}\n                      </CardsTitle>\n                      <PriceTitle>{cart.rentalPrice}</PriceTitle>\n                    </DivTitle>\n\n                    <DivTextInfo className=\"div-text-info\">\n                      <DivFirst className=\"DivFirst \">\n                        <p className=\"City\">\n                          {cart.address.split(\",\")[1].trim().split(\" \")[0]}\n                        </p>\n                        <Vector></Vector>\n                        <p className=\"Country\">\n                          {\n                            cart.address\n                              .split(\",\")\n                              .slice(2)\n                              .join(\",\")\n                              .trim()\n                              .split(\" \")[0]\n                          }\n                        </p>\n                        <Vector></Vector>\n                        <p className=\"rentalCompany\">{cart.rentalCompany}</p>\n                        {cart.rentalCompany.length < 19 && <Vector></Vector>}\n\n                        {cart.rentalCompany.length < 19 && (\n                          <p className=\"Class auto\">\n                            {cart.accessories\n                              .map((feature) =>\n                                feature.toLowerCase().includes(\"premium\")\n                                  ? \"Premium\"\n                                  : \"\"\n                              )\n                              .find((str) => str === \"Premium\") || \"\"}\n                          </p>\n                        )}\n                      </DivFirst>\n                      <DivSecond className=\"DivSecond \">\n                        <p> {cart.type} </p>\n                        <Vector></Vector>\n                        <p> {cart.make} </p>\n                        <Vector></Vector>\n                        <p> {cart.id} </p>\n                        {cart.type.length < 6 && <Vector></Vector>}\n                        {cart.type.length < 6 && (\n                          <p>\n                            {cart.accessories\n                              .map((feature) => {\n                                const foundSubstring = substringsToCheck.find(\n                                  (substring) =>\n                                    feature\n                                      .toLowerCase()\n                                      .includes(substring.toLowerCase())\n                                );\n\n                                return foundSubstring\n                                  ? foundSubstring.charAt(0).toUpperCase() +\n                                      foundSubstring.slice(1)\n                                  : \"\";\n                              })\n                              .filter(Boolean)[0] || \"\"}\n                          </p>\n                        )}\n                      </DivSecond>\n                    </DivTextInfo>\n\n                    <ButtonLearnMore\n                      type=\"button\"\n                      className=\"cards-item-btn\"\n                      aria-label=\"Open modal Learn more\"\n                      id={cart.id}\n                      onClick={() => {\n                        handleLearnMore(cart.id);\n                      }}\n                    >\n                      Learn more\n                    </ButtonLearnMore>\n                  </CardItem>\n                ))}\n        </CardList>\n        {currentPage > 1 && (\n          <ButtonToUp onClick={handleReloadComponent}>To up ⇈</ButtonToUp>\n        )}\n        {currentItems.length > 0 && currentItems.length >= ITEMS_PER_PAGE && (\n          <ButtonLoadMore\n            type=\"button\"\n            className=\"cards-item-btn\"\n            onClick={handleLoadMore}\n          >\n            Load more ⇊\n          </ButtonLoadMore>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default CatalogItem;\n","// Catalog.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAdverts } from \"../redux/thunks\";\nimport { selectAdverts, selectFavorites } from \"../redux/selectors\";\nimport CatalogItem from \"components/Catalog/CatalogItem\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\n\nimport ModalLearnMore from \"components/Modal/ModalLearnMore\";\n\nimport { Container } from \"styles/Container/Container\";\n// import SearchItem from \"components/Search/SearchItem\";\n\nconst ITEMS_PER_PAGE = 12;\n// const arrayRentalPrice = [];\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n  const adverts = useSelector(selectAdverts) || [];\n  const allAdverts = useSelector(selectFavorites) || [];\n  const [arrayRentalPrice, setArrayRentalPrice] = useState([]);\n  // console.log(\"adverts=\", adverts);\n  // console.log(\"allAdverts=\", allAdverts);\n  const [currentPage, setCurrentPage] = useState(\n    parseInt(localStorage.getItem(\"currentPage\"), 10) || 1\n  );\n\n  const [selectedItemId, setSelectedItemId] = useState(null);\n\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [reloadComponent, setReloadComponent] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchAdverts({ page: currentPage }));\n  }, [dispatch, currentPage, reloadComponent]);\n\n  const indexOfLastItem = currentPage * ITEMS_PER_PAGE;\n  const indexOfFirstItem = indexOfLastItem - ITEMS_PER_PAGE;\n  const currentItems = adverts.slice(indexOfFirstItem, indexOfLastItem);\n\n  const handleLoadMore = () => {\n    setCurrentPage((prevPage) => {\n      const nextPage = prevPage + 1;\n      localStorage.setItem(\"currentPage\", nextPage);\n      return nextPage;\n    });\n  };\n  const handleLearnMore = (id) => {\n    setSelectedItemId(id);\n\n    setModalOpen(true);\n  };\n\n  const handleRentalPriceChange = (rentalPrice) => {\n    // setRentalPrice(rentalPrice);\n    // Здесь вы можете делать что-то с полученным значением selectRentalPrice\n    allAdverts.map((advert) => {\n      const rentalPriceCurrent = Number(advert.rentalPrice.slice(1)); // Удаление первого символа и преобразование в число\n      // console.log(\"Received Rental Price:\", rentalPriceCurrent);\n      if (rentalPriceCurrent <= rentalPrice) {\n        arrayRentalPrice.push(advert.id);\n        setArrayRentalPrice(arrayRentalPrice);\n        return { ...advert, rentalPriceCurrent };\n      }\n      return null;\n    });\n  };\n\n  // console.log(\"Received Rental Price:\", rentalPrice);\n  console.log(\"arrayRentalPrice=\", arrayRentalPrice);\n\n  const handleReloadComponent = () => {\n    setReloadComponent((prevState) => !prevState); // Инвертируем состояние для полной перезагрузки компонента\n    setCurrentPage(1); // Сбрасываем текущую страницу на первую\n    localStorage.removeItem(\"currentPage\"); // Удаляем текущую страницу из локального хранилища\n  };\n  // console.log(\"Current Rental Price:\", selectRentalPrice);\n\n  return (\n    <Container>\n      <SearchForm handleRentalPriceChange={handleRentalPriceChange} />\n\n      <CatalogItem\n        currentItems={adverts}\n        handleLoadMore={handleLoadMore}\n        handleLearnMore={handleLearnMore}\n        handleReloadComponent={handleReloadComponent}\n        currentPage={currentPage}\n        arrayRentalPrice={arrayRentalPrice}\n      />\n\n      <ModalLearnMore\n        isOpen={isModalOpen}\n        closeModal={() => setModalOpen(false)}\n        currentItems={currentItems}\n        selectedItemId={selectedItemId}\n      />\n    </Container>\n  );\n};\n\nexport default Catalog;\n"],"names":["_ref","arrayRentalPrice","currentItems","handleLoadMore","handleLearnMore","handleReloadComponent","currentPage","_useState","useState","JSON","parse","localStorage","getItem","_useState2","_slicedToArray","favorites","setFavorites","toggleFavorites","id","updatedFavorites","includes","filter","favoriteId","concat","_toConsumableArray","setItem","stringify","console","log","_jsx","Container","children","_jsxs","className","CardList","length","map","cart","index","CardItem","category","srcSet","make","type","DivImg","Img","src","img","width","height","alt","loading","ButtonHeardIcone","onClick","SvgHeardActive","href","sprite","SvgHeard","DivTitle","CardsTitle","model","SpanCardsTitle","year","PriceTitle","rentalPrice","DivTextInfo","DivFirst","address","split","trim","Vector","slice","join","rentalCompany","accessories","feature","toLowerCase","find","str","DivSecond","foundSubstring","substringsToCheck","substring","charAt","toUpperCase","Boolean","ButtonLearnMore","ButtonToUp","ButtonLoadMore","dispatch","useDispatch","adverts","useSelector","selectAdverts","allAdverts","selectFavorites","setArrayRentalPrice","_useState3","parseInt","_useState4","setCurrentPage","_useState5","_useState6","selectedItemId","setSelectedItemId","_useState7","_useState8","isModalOpen","setModalOpen","_useState9","_useState10","reloadComponent","setReloadComponent","useEffect","fetchAdverts","page","indexOfLastItem","indexOfFirstItem","SearchForm","handleRentalPriceChange","advert","rentalPriceCurrent","Number","push","_objectSpread","CatalogItem","prevPage","nextPage","prevState","removeItem","ModalLearnMore","isOpen","closeModal"],"sourceRoot":""}