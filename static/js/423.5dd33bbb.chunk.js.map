{"version":3,"file":"static/js/423.5dd33bbb.chunk.js","mappings":"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","sources":["components/Catalog/CatalogItem.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container } from \"styles/Container/Container\";\nimport {\n  ButtonHeardIcone,\n  ButtonLoadMore,\n  ButtonLearnMore,\n  CardItem,\n  CardList,\n  CardsTitle,\n  Img,\n  DivImg,\n  DivTextInfo,\n  SpanCardsTitle,\n  DivTitle,\n  PriceTitle,\n  Vector,\n  DivFirst,\n  DivSecond,\n  SvgHeard,\n  SvgHeardActive,\n  ButtonToUp,\n} from \"./CatalogItem.styled\";\n\nimport substringsToCheck from \"./substringsToCheck\";\nimport sprite from \"../../image/sprite.svg\";\nimport { useSelector } from \"react-redux\";\nimport { selectFavorites } from \"../../redux/selectors\";\n// const array = [9582, 9590, 9597, 9583];\nconst ITEMS_PER_PAGE = 12;\nconst CatalogItem = ({\n  arrayRentalPrice,\n  arrayMileageFrom,\n  arrayMileageTo,\n  arrayMake,\n  currentItems,\n  handleLoadMore,\n  handleLearnMore,\n  handleReloadComponent,\n  currentPage,\n}) => {\n  const [favorites, setFavorites] = useState(\n    JSON.parse(localStorage.getItem(\"favorites\")) || []\n  );\n  // const adverts = useSelector(selectAdverts) || [];\n  const allAdverts = useSelector(selectFavorites) || [];\n  const toggleFavorites = (id) => {\n    const updatedFavorites = favorites.includes(id)\n      ? favorites.filter((favoriteId) => favoriteId !== id)\n      : [...favorites, id];\n\n    setFavorites(updatedFavorites);\n\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n  };\n  //  console.log(\"arrayRentalPrice=\", arrayRentalPrice);\n\n  // console.log(\"arrayMileageFrom=\", arrayMileageFrom);\n  // console.log(\"arrayMileageTo=\", arrayMileageTo);\n\n  return (\n    <Container>\n      <div className=\"div-cards-list\">\n        <CardList className=\"cards-list\">\n          {arrayRentalPrice.length === 0 &&\n          arrayMake.lenght === 0 &&\n          arrayMileageFrom.length === 0 &&\n          arrayMileageTo.length === 0\n            ? currentItems.map((cart, index) => (\n                <CardItem\n                  key={index}\n                  className=\"cards-item\"\n                  data-category={cart.category}\n                  data-aos=\"flip-left\"\n                  data-aos-duration=\"1000\"\n                >\n                  <picture>\n                    <source srcSet={cart.make} type=\"image/webp\" />\n                    <source srcSet={cart.make} type=\"image/jpeg\" />\n                    <DivImg>\n                      <Img\n                        src={cart.img}\n                        width=\"401\"\n                        height=\"268\"\n                        alt={cart.make}\n                        className=\"card-img\"\n                        loading=\"lazy\"\n                      />\n                    </DivImg>\n                  </picture>\n                  <div className=\"test-div\">\n                    <ButtonHeardIcone\n                      type=\"button\"\n                      className=\"btn-heard-icone\"\n                      onClick={() => toggleFavorites(cart.id)}\n                    >\n                      {favorites.includes(cart.id) ? (\n                        <SvgHeardActive>\n                          <use href={`${sprite}#icon-heard_active`}></use>\n                        </SvgHeardActive>\n                      ) : (\n                        <SvgHeard>\n                          <use href={`${sprite}#icon-heard`}></use>\n                        </SvgHeard>\n                      )}\n                    </ButtonHeardIcone>\n                  </div>\n                  <DivTitle className=\"DivTitle\">\n                    <CardsTitle className=\"cards-item-title\">\n                      {cart.make}\n                      {cart.model.length < 8 && (\n                        <SpanCardsTitle> {cart.model}</SpanCardsTitle>\n                      )}\n                      , {cart.year}\n                    </CardsTitle>\n                    <PriceTitle>{cart.rentalPrice}</PriceTitle>\n                  </DivTitle>\n\n                  <DivTextInfo className=\"div-text-info\">\n                    <DivFirst className=\"DivFirst \">\n                      <p className=\"City\">\n                        {cart.address.split(\",\")[1].trim().split(\" \")[0]}\n                      </p>\n                      <Vector></Vector>\n                      <p className=\"Country\">\n                        {\n                          cart.address\n                            .split(\",\")\n                            .slice(2)\n                            .join(\",\")\n                            .trim()\n                            .split(\" \")[0]\n                        }\n                      </p>\n                      <Vector></Vector>\n                      <p className=\"rentalCompany\">{cart.rentalCompany}</p>\n                      {cart.rentalCompany.length < 19 && <Vector></Vector>}\n\n                      {cart.rentalCompany.length < 19 && (\n                        <p className=\"Class auto\">\n                          {cart.accessories\n                            .map((feature) =>\n                              feature.toLowerCase().includes(\"premium\")\n                                ? \"Premium\"\n                                : \"\"\n                            )\n                            .find((str) => str === \"Premium\") || \"\"}\n                        </p>\n                      )}\n                    </DivFirst>\n                    <DivSecond className=\"DivSecond \">\n                      <p> {cart.type} </p>\n                      <Vector></Vector>\n                      <p> {cart.make} </p>\n                      <Vector></Vector>\n                      <p> {cart.id} </p>\n                      {cart.type.length < 6 && <Vector></Vector>}\n                      {cart.type.length < 6 && (\n                        <p>\n                          {cart.accessories\n                            .map((feature) => {\n                              const foundSubstring = substringsToCheck.find(\n                                (substring) =>\n                                  feature\n                                    .toLowerCase()\n                                    .includes(substring.toLowerCase())\n                              );\n\n                              return foundSubstring\n                                ? foundSubstring.charAt(0).toUpperCase() +\n                                    foundSubstring.slice(1)\n                                : \"\";\n                            })\n                            .filter(Boolean)[0] || \"\"}\n                        </p>\n                      )}\n                    </DivSecond>\n                  </DivTextInfo>\n\n                  <ButtonLearnMore\n                    type=\"button\"\n                    className=\"cards-item-btn\"\n                    aria-label=\"Open modal Learn more\"\n                    id={cart.id}\n                    onClick={() => {\n                      handleLearnMore(cart.id);\n                    }}\n                  >\n                    Learn more\n                  </ButtonLearnMore>\n                </CardItem>\n              ))\n            : // : currentItems\n              allAdverts\n                .filter(\n                  (cart) =>\n                    // (!arrayMake.length || arrayMake.includes(cart.id)) &&\n                    (!arrayRentalPrice.length ||\n                      arrayRentalPrice.includes(cart.id)) &&\n                    (!arrayMileageFrom.length ||\n                      arrayMileageFrom.includes(cart.id)) &&\n                    (!arrayMileageTo.length || arrayMileageTo.includes(cart.id))\n                )\n                .map((cart, index) => (\n                  <CardItem\n                    key={index}\n                    className=\"cards-item\"\n                    data-category={cart.category}\n                    data-aos=\"flip-left\"\n                    data-aos-duration=\"1000\"\n                  >\n                    <picture>\n                      <source srcSet={cart.make} type=\"image/webp\" />\n                      <source srcSet={cart.make} type=\"image/jpeg\" />\n                      <DivImg>\n                        <Img\n                          src={cart.img}\n                          width=\"401\"\n                          height=\"268\"\n                          alt={cart.make}\n                          className=\"card-img\"\n                          loading=\"lazy\"\n                        />\n                      </DivImg>\n                    </picture>\n                    <div className=\"test-div\">\n                      <ButtonHeardIcone\n                        type=\"button\"\n                        className=\"btn-heard-icone\"\n                        onClick={() => toggleFavorites(cart.id)}\n                      >\n                        {favorites.includes(cart.id) ? (\n                          <SvgHeardActive>\n                            <use href={`${sprite}#icon-heard_active`}></use>\n                          </SvgHeardActive>\n                        ) : (\n                          <SvgHeard>\n                            <use href={`${sprite}#icon-heard`}></use>\n                          </SvgHeard>\n                        )}\n                      </ButtonHeardIcone>\n                    </div>\n                    <DivTitle className=\"DivTitle\">\n                      <CardsTitle className=\"cards-item-title\">\n                        {cart.make}\n                        {cart.model.length < 8 && (\n                          <SpanCardsTitle> {cart.model}</SpanCardsTitle>\n                        )}\n                        , {cart.year}\n                      </CardsTitle>\n                      <PriceTitle>{cart.rentalPrice}</PriceTitle>\n                    </DivTitle>\n\n                    <DivTextInfo className=\"div-text-info\">\n                      <DivFirst className=\"DivFirst \">\n                        <p className=\"City\">\n                          {cart.address.split(\",\")[1].trim().split(\" \")[0]}\n                        </p>\n                        <Vector></Vector>\n                        <p className=\"Country\">\n                          {\n                            cart.address\n                              .split(\",\")\n                              .slice(2)\n                              .join(\",\")\n                              .trim()\n                              .split(\" \")[0]\n                          }\n                        </p>\n                        <Vector></Vector>\n                        <p className=\"rentalCompany\">{cart.rentalCompany}</p>\n                        {cart.rentalCompany.length < 19 && <Vector></Vector>}\n\n                        {cart.rentalCompany.length < 19 && (\n                          <p className=\"Class auto\">\n                            {cart.accessories\n                              .map((feature) =>\n                                feature.toLowerCase().includes(\"premium\")\n                                  ? \"Premium\"\n                                  : \"\"\n                              )\n                              .find((str) => str === \"Premium\") || \"\"}\n                          </p>\n                        )}\n                      </DivFirst>\n                      <DivSecond className=\"DivSecond \">\n                        <p> {cart.type} </p>\n                        <Vector></Vector>\n                        <p> {cart.make} </p>\n                        <Vector></Vector>\n                        <p> {cart.id} </p>\n                        {cart.type.length < 6 && <Vector></Vector>}\n                        {cart.type.length < 6 && (\n                          <p>\n                            {cart.accessories\n                              .map((feature) => {\n                                const foundSubstring = substringsToCheck.find(\n                                  (substring) =>\n                                    feature\n                                      .toLowerCase()\n                                      .includes(substring.toLowerCase())\n                                );\n\n                                return foundSubstring\n                                  ? foundSubstring.charAt(0).toUpperCase() +\n                                      foundSubstring.slice(1)\n                                  : \"\";\n                              })\n                              .filter(Boolean)[0] || \"\"}\n                          </p>\n                        )}\n                      </DivSecond>\n                    </DivTextInfo>\n\n                    <ButtonLearnMore\n                      type=\"button\"\n                      className=\"cards-item-btn\"\n                      aria-label=\"Open modal Learn more\"\n                      id={cart.id}\n                      onClick={() => {\n                        handleLearnMore(cart.id);\n                      }}\n                    >\n                      Learn more\n                    </ButtonLearnMore>\n                  </CardItem>\n                ))}\n        </CardList>\n        {currentPage > 1 && (\n          <ButtonToUp onClick={handleReloadComponent}>To up ⇈</ButtonToUp>\n        )}\n        {currentItems.length > 0 && currentItems.length >= ITEMS_PER_PAGE && (\n          <ButtonLoadMore\n            type=\"button\"\n            className=\"cards-item-btn\"\n            onClick={handleLoadMore}\n          >\n            Load more ⇊\n          </ButtonLoadMore>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default CatalogItem;\n","// Catalog.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAdverts } from \"../redux/thunks\";\nimport { selectAdverts, selectFavorites } from \"../redux/selectors\";\nimport CatalogItem from \"components/Catalog/CatalogItem\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\n\nimport ModalLearnMore from \"components/Modal/ModalLearnMore\";\n\nimport { Container } from \"styles/Container/Container\";\n\nconst ITEMS_PER_PAGE = 12;\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n  const adverts = useSelector(selectAdverts);\n  const allAdverts = useSelector(selectFavorites) || [];\n\n  const [arrayMake, setArrayMake] = useState([]);\n  const [arrayRentalPrice, setArrayRentalPrice] = useState([]);\n  const [arrayMileageFrom, setArrayMileageFrom] = useState([]);\n  const [arrayMileageTo, setArrayMileageTo] = useState([]);\n\n  console.log(\"adverts=\", adverts);\n  // console.log(\"allAdverts=\", allAdverts);\n  const [currentPage, setCurrentPage] = useState(\n    parseInt(localStorage.getItem(\"currentPage\"), 10) || 1\n  );\n\n  const [selectedItemId, setSelectedItemId] = useState(null);\n\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [reloadComponent, setReloadComponent] = useState(false);\n  console.log(\"allAdverts=\", allAdverts);\n  useEffect(() => {\n    dispatch(fetchAdverts({ page: currentPage }));\n    // dispatch(fetchAdverts());\n  }, [dispatch, currentPage, reloadComponent]);\n\n  const indexOfLastItem = currentPage * ITEMS_PER_PAGE;\n  const indexOfFirstItem = indexOfLastItem - ITEMS_PER_PAGE;\n  const currentItems = adverts.slice(indexOfFirstItem, indexOfLastItem);\n\n  const handleLoadMore = () => {\n    setCurrentPage((prevPage) => {\n      const nextPage = prevPage + 1;\n      localStorage.setItem(\"currentPage\", nextPage);\n      return nextPage;\n    });\n  };\n  const handleLearnMore = (id) => {\n    setSelectedItemId(id);\n\n    setModalOpen(true);\n  };\n\n  const handleMake = (inputMake) => {\n    // console.log(\"inputRentalPrice=\", Number(inputRentalPrice));\n    // console.log(\"allAdverts=\", allAdverts);\n    // console.log(\"inputMake=\", inputMake);\n    // allAdverts.map((advert) => {\n    //   console.log(\"advert.make=\", advert.make);\n    //   // if (rentalPriceSelect) {\n    //   //     // arrayPrice.push(rentalPriceSelect);\n    //   //     setPrice(Number(rentalPriceSelect));\n    //   //   }\n    //   // console.log(\"rentalPriceCurrent=\", rentalPriceCurrent);\n    //   if (advert.make === inputMake) {\n    //     arrayMake.push(advert.id);\n\n    //     setArrayMake(arrayMake);\n    //     console.log(\"arrayMake=\", arrayMake);\n    //     // return { ...advert, rentalPriceCurrent };\n    //   }\n\n    //   return null;\n    // });\n    const filteredAdverts = allAdverts.filter(\n      (advert) => advert.make === inputMake\n    );\n    const ids = filteredAdverts.map((advert) => advert.id);\n    setArrayMake(ids);\n  };\n  console.log(\"arrayMake=\", arrayMake);\n  const handleRentalPrice = (inputRentalPrice) => {\n    // console.log(\"inputRentalPrice=\", Number(inputRentalPrice));\n    // console.log(\"allAdverts=\", allAdverts);\n    // console.log(\"adverts=\", adverts);\n    allAdverts.map((advert) => {\n      const rentalPriceCurrent = Number(advert.rentalPrice.slice(1)); // Удаление первого символа и преобразование в число\n      // if (rentalPriceSelect) {\n      //     // arrayPrice.push(rentalPriceSelect);\n      //     setPrice(Number(rentalPriceSelect));\n      //   }\n      // console.log(\"rentalPriceCurrent=\", rentalPriceCurrent);\n      if (rentalPriceCurrent <= Number(inputRentalPrice)) {\n        arrayRentalPrice.push(advert.id);\n\n        setArrayRentalPrice(arrayRentalPrice);\n        // return { ...advert, rentalPriceCurrent };\n      }\n\n      return null;\n    });\n  };\n  // console.log(\"arrayRentalPrice=\", arrayRentalPrice);\n  // console.log(\"rentalPriceCurrent=\", rentalPriceCurrent);\n\n  // con\n  const handleMileageFrom = (inputMileageFrom) => {\n    const arrayMileageFrom = allAdverts\n      .filter((advert) => Number(advert.mileage) >= Number(inputMileageFrom))\n      .map((advert) => advert.id);\n\n    setArrayMileageFrom(arrayMileageFrom);\n  };\n\n  const handleMileageTo = (inputMileageTo) => {\n    const arrayMileageTo = allAdverts\n      .filter((advert) => Number(advert.mileage) <= Number(inputMileageTo))\n      .map((advert) => advert.id);\n\n    setArrayMileageTo(arrayMileageTo);\n  };\n\n  console.log(\"arrayMileageTo=\", arrayMileageTo);\n  console.log(\"arrayMileageFrom=\", arrayMileageFrom);\n  const handleReloadComponent = () => {\n    setReloadComponent((prevState) => !prevState); // Инвертируем состояние для полной перезагрузки компонента\n    setCurrentPage(1); // Сбрасываем текущую страницу на первую\n    localStorage.removeItem(\"currentPage\"); // Удаляем текущую страницу из локального хранилища\n  };\n\n  return (\n    <Container>\n      <SearchForm\n        handleMake={handleMake}\n        handleRentalPrice={handleRentalPrice}\n        // передаємо значення импутів з SearchForm у CatalogPage\n        handleMileageFrom={handleMileageFrom} // передаємо значення импутів з SearchForm у CatalogPage\n        handleMileageTo={handleMileageTo} // передаємо значення импутів з SearchForm у CatalogPage\n        arrayRentalPrice={arrayRentalPrice}\n      />\n\n      <CatalogItem\n        currentItems={adverts}\n        handleLoadMore={handleLoadMore}\n        handleLearnMore={handleLearnMore}\n        handleReloadComponent={handleReloadComponent}\n        currentPage={currentPage}\n        arrayRentalPrice={arrayRentalPrice}\n        arrayMileageTo={arrayMileageTo}\n        arrayMileageFrom={arrayMileageFrom}\n        arrayMake={arrayMake}\n      />\n      {/* {currentItems.length === 0 &&\n        toast.error(\"Nothing found based on your search criteria\")} */}\n\n      <ModalLearnMore\n        isOpen={isModalOpen}\n        closeModal={() => setModalOpen(false)}\n        currentItems={currentItems}\n        selectedItemId={selectedItemId}\n      />\n    </Container>\n  );\n};\n\nexport default Catalog;\n"],"names":["_ref","arrayRentalPrice","arrayMileageFrom","arrayMileageTo","arrayMake","currentItems","handleLoadMore","handleLearnMore","handleReloadComponent","currentPage","_useState","useState","JSON","parse","localStorage","getItem","_useState2","_slicedToArray","favorites","setFavorites","allAdverts","useSelector","selectFavorites","toggleFavorites","id","updatedFavorites","includes","filter","favoriteId","concat","_toConsumableArray","setItem","stringify","_jsx","Container","children","_jsxs","className","CardList","length","lenght","map","cart","index","CardItem","category","srcSet","make","type","DivImg","Img","src","img","width","height","alt","loading","ButtonHeardIcone","onClick","SvgHeardActive","href","sprite","SvgHeard","DivTitle","CardsTitle","model","SpanCardsTitle","year","PriceTitle","rentalPrice","DivTextInfo","DivFirst","address","split","trim","Vector","slice","join","rentalCompany","accessories","feature","toLowerCase","find","str","DivSecond","foundSubstring","substringsToCheck","substring","charAt","toUpperCase","Boolean","ButtonLearnMore","ButtonToUp","ButtonLoadMore","dispatch","useDispatch","adverts","selectAdverts","setArrayMake","_useState3","_useState4","setArrayRentalPrice","_useState5","_useState6","setArrayMileageFrom","_useState7","_useState8","setArrayMileageTo","console","log","_useState9","parseInt","_useState10","setCurrentPage","_useState11","_useState12","selectedItemId","setSelectedItemId","_useState13","_useState14","isModalOpen","setModalOpen","_useState15","_useState16","reloadComponent","setReloadComponent","useEffect","fetchAdverts","page","indexOfLastItem","indexOfFirstItem","SearchForm","handleMake","inputMake","ids","advert","handleRentalPrice","inputRentalPrice","Number","push","handleMileageFrom","inputMileageFrom","mileage","handleMileageTo","inputMileageTo","CatalogItem","prevPage","nextPage","prevState","removeItem","ModalLearnMore","isOpen","closeModal"],"sourceRoot":""}