{"version":3,"file":"static/js/470.6b6f90cc.chunk.js","mappings":"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","sources":["components/Catalog/CatalogItem.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container } from \"styles/Container/Container\";\nimport {\n  ButtonHeardIcone,\n  ButtonLoadMore,\n  ButtonLearnMore,\n  CardItem,\n  CardList,\n  CardsTitle,\n  Img,\n  DivImg,\n  DivTextInfo,\n  SpanCardsTitle,\n  DivTitle,\n  PriceTitle,\n  Vector,\n  DivFirst,\n  DivSecond,\n} from \"./CatalogItem.styled\";\nimport { HeardRemoveFavorites } from \"components/Icons/HeardRemoveFavorites.jsx\";\nimport { HeardAddFavorites } from \"components/Icons/HeardAddFavorites.jsx\";\n\nimport substringsToCheck from \"./substringsToCheck\";\nimport sprite from \"../../image/sprite.svg\";\n// import Modal from \"components/Modal/Modal\";\n// import ModalLearnMore from \"components/Modal/ModalLearnMore\"; // Import the ModalLearnMore component\n\nconst ITEMS_PER_PAGE = 12;\nconst CatalogItem = ({ currentItems, handleLoadMore, handleLearnMore }) => {\n  const [setModalIsOpen] = useState(false);\n  // modalIsOpen\n  const [favorites, setFavorites] = useState(\n    JSON.parse(localStorage.getItem(\"favorites\")) || []\n  );\n  // const [selectedItemId, setSelectedItemId] = useState(null);\n  const toggleFavorites = (id) => {\n    const updatedFavorites = favorites.includes(id)\n      ? favorites.filter((favoriteId) => favoriteId !== id)\n      : [...favorites, id];\n\n    setFavorites(updatedFavorites);\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n  };\n\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n  // const address = \"321 Example Road, Odessa, Ukraine\";\n  // const city = cart.address.split(\",\")[1].trim().split(\" \")[0];\n\n  return (\n    <Container>\n      <div className=\"div-cards-list\">\n        <CardList className=\"cards-list\">\n          {currentItems.map((cart, index) => (\n            <CardItem\n              key={index}\n              className=\"cards-item\"\n              data-category={cart.category}\n              data-aos=\"flip-left\"\n              data-aos-duration=\"1000\"\n            >\n              <picture>\n                <source srcSet={cart.make} type=\"image/webp\" />\n                <source srcSet={cart.make} type=\"image/jpeg\" />\n                <DivImg>\n                  <Img\n                    src={cart.img}\n                    width=\"401\"\n                    height=\"268\"\n                    alt={cart.make}\n                    className=\"card-img\"\n                    loading=\"lazy\"\n                  />\n                </DivImg>\n              </picture>\n              <div className=\"test-div\">\n                <ButtonHeardIcone\n                  type=\"button\"\n                  className=\"btn-heard-icone\"\n                  aria-label={\n                    favorites.includes(cart.id) ? (\n                      <HeardRemoveFavorites\n                        cartId={cart.id}\n                        isFavorite={favorites.includes(cart.id)}\n                        onClick={() => toggleFavorites(cart.id)}\n                      />\n                    ) : (\n                      <HeardAddFavorites\n                        cartId={cart.id}\n                        isFavorite={favorites.includes(cart.id)}\n                        onClick={() => toggleFavorites(cart.id)}\n                      />\n                    )\n                  }\n                  onClick={() => toggleFavorites(cart.id)}\n                >\n                  {/* <Heard\n                    cartId={cart.id}\n                    isFavorite={favorites.includes(cart.id)}\n                    onClick={() => toggleFavorites(cart.id)}\n                  /> */}\n\n                  {favorites.includes(cart.id) ? (\n                    <svg>\n                      <use href={`${sprite}#icon-heard_active`}></use>\n                    </svg>\n                  ) : (\n                    <svg>\n                      <use href={`${sprite}#icon-heard`}></use>\n                    </svg>\n                  )}\n                </ButtonHeardIcone>\n              </div>\n              <DivTitle className=\"DivTitle\">\n                <CardsTitle className=\"cards-item-title\">\n                  {cart.make}\n                  {cart.model.length < 8 && (\n                    <SpanCardsTitle> {cart.model}</SpanCardsTitle>\n                  )}\n                  , {cart.year}\n                </CardsTitle>\n                <PriceTitle>{cart.rentalPrice}</PriceTitle>\n              </DivTitle>\n\n              <DivTextInfo className=\"div-text-info\">\n                <DivFirst className=\"DivFirst \">\n                  <p className=\"City\">\n                    {cart.address.split(\",\")[1].trim().split(\" \")[0]}\n                  </p>\n                  <Vector></Vector>\n                  <p className=\"Country\">\n                    {\n                      cart.address\n                        .split(\",\")\n                        .slice(2)\n                        .join(\",\")\n                        .trim()\n                        .split(\" \")[0]\n                    }\n                  </p>\n                  <Vector></Vector>\n                  <p className=\"rentalCompany\">{cart.rentalCompany}</p>\n                  {cart.rentalCompany.length < 19 && <Vector></Vector>}\n\n                  {cart.rentalCompany.length < 19 && (\n                    <p className=\"Class auto\">\n                      {cart.accessories\n                        .map((feature) =>\n                          feature.toLowerCase().includes(\"premium\")\n                            ? \"Premium\"\n                            : \"\"\n                        )\n                        .find((str) => str === \"Premium\") || \"\"}\n                    </p>\n                  )}\n                </DivFirst>\n                <DivSecond className=\"DivSecond \">\n                  <p> {cart.type} </p>\n                  <Vector></Vector>\n                  <p> {cart.make} </p>\n                  <Vector></Vector>\n                  <p> {cart.mileage} </p>\n                  {cart.type.length < 6 && <Vector></Vector>}\n                  {cart.type.length < 6 && (\n                    <p>\n                      {cart.accessories\n                        .map((feature) => {\n                          const foundSubstring = substringsToCheck.find(\n                            (substring) =>\n                              feature\n                                .toLowerCase()\n                                .includes(substring.toLowerCase())\n                          );\n\n                          return foundSubstring\n                            ? foundSubstring.charAt(0).toUpperCase() +\n                                foundSubstring.slice(1)\n                            : \"\";\n                        })\n                        .filter(Boolean)[0] || \"\"}\n                    </p>\n                  )}\n                </DivSecond>\n              </DivTextInfo>\n\n              <ButtonLearnMore\n                type=\"button\"\n                className=\"cards-item-btn\"\n                aria-label=\"Open modal Learn more\"\n                id={cart.id}\n                onClick={() => {\n                  handleLearnMore(cart.id);\n                  openModal();\n                }}\n              >\n                Learn more\n              </ButtonLearnMore>\n            </CardItem>\n          ))}\n        </CardList>\n        {currentItems.length > 0 && currentItems.length >= ITEMS_PER_PAGE && (\n          <ButtonLoadMore\n            type=\"button\"\n            className=\"cards-item-btn\"\n            onClick={handleLoadMore}\n          >\n            Load more\n          </ButtonLoadMore>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default CatalogItem;\n\n//  aria-label={\n//                     favorites.includes(cart.id)\n//                       ? \"Remove from Favorites\"\n//                       : \"Add to Favorites\"\n//                   }\n\n//  {favorites.includes(cart.id)\n//                     ? \"Remove from Favorites\"\n//                     : \"Add to Favorites\"}\n","// Catalog.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport fetchAdverts from \"../redux/thunks\";\nimport { selectAdverts } from \"../redux/selectors\";\nimport CatalogItem from \"components/Catalog/CatalogItem\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\n\nimport ModalLearnMore from \"components/Modal/ModalLearnMore\"; // Import the ModalLearnMore component\n\nimport { Container } from \"styles/Container/Container\";\n\nconst ITEMS_PER_PAGE = 12;\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n  const adverts = useSelector(selectAdverts) || [];\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedMake, setSelectedMake] = useState(\"\");\n  const [selectedRentalPrice, setSelectedRentalPrice] = useState(0);\n  const [selectedItemId, setSelectedItemId] = useState(null);\n  const [filteredItems, setFilteredItems] = useState([]);\n\n  const [isModalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    dispatch(fetchAdverts({ page: currentPage, make: selectedMake }));\n    // eslint-disable-next-line\n  }, [dispatch, currentPage, selectedMake]);\n\n  const indexOfLastItem = currentPage * ITEMS_PER_PAGE;\n  const indexOfFirstItem = indexOfLastItem - ITEMS_PER_PAGE;\n  const currentItems = adverts.slice(indexOfFirstItem, indexOfLastItem);\n\n  const handleSearch = () => {\n    const newFilteredItems = currentItems.filter((item) =>\n      selectedMake ? item.make === selectedMake : true\n    );\n    setFilteredItems(newFilteredItems);\n  };\n\n  const handleLoadMore = () => {\n    setCurrentPage((prevPage) => prevPage + 1);\n  };\n\n  const handleLearnMore = (id) => {\n    setSelectedItemId(id);\n\n    setModalOpen(true);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Your form submission logic\n    handleSearch();\n  };\n\n  const handleMakeChange = (event) => {\n    setSelectedMake(event.target.value);\n  };\n\n  const handleRentalPriceChange = (event) => {\n    setSelectedRentalPrice(event.target.value);\n  };\n\n  return (\n    <Container>\n      <SearchForm\n        handleSubmit={handleSubmit}\n        handleMakeChange={handleMakeChange}\n        handleRentalPriceChange={handleRentalPriceChange}\n        selectedMake={selectedMake}\n        selectedRentalPrice={selectedRentalPrice}\n        onSearch={handleSearch}\n      />\n      <CatalogItem\n        currentItems={filteredItems.length ? filteredItems : currentItems}\n        handleLoadMore={handleLoadMore}\n        handleLearnMore={handleLearnMore}\n      />\n      <ModalLearnMore\n        // isOpen={modalIsOpen}\n        isOpen={isModalOpen}\n        // closeModal={() => setModalIsOpen(false)}\n        closeModal={() => setModalOpen(false)}\n        currentItems={currentItems}\n        selectedItemId={selectedItemId}\n      />\n    </Container>\n  );\n};\n\nexport default Catalog;\n"],"names":["_ref","currentItems","handleLoadMore","handleLearnMore","_useState","useState","setModalIsOpen","_slicedToArray","_useState3","JSON","parse","localStorage","getItem","_useState4","favorites","setFavorites","toggleFavorites","id","updatedFavorites","includes","filter","favoriteId","concat","_toConsumableArray","setItem","stringify","_jsx","Container","children","_jsxs","className","CardList","map","cart","index","CardItem","category","srcSet","make","type","DivImg","Img","src","img","width","height","alt","loading","ButtonHeardIcone","HeardRemoveFavorites","cartId","isFavorite","onClick","HeardAddFavorites","href","sprite","DivTitle","CardsTitle","model","length","SpanCardsTitle","year","PriceTitle","rentalPrice","DivTextInfo","DivFirst","address","split","trim","Vector","slice","join","rentalCompany","accessories","feature","toLowerCase","find","str","DivSecond","mileage","foundSubstring","substringsToCheck","substring","charAt","toUpperCase","Boolean","ButtonLearnMore","ButtonLoadMore","dispatch","useDispatch","adverts","useSelector","selectAdverts","_useState2","currentPage","setCurrentPage","selectedMake","setSelectedMake","_useState5","_useState6","selectedRentalPrice","setSelectedRentalPrice","_useState7","_useState8","selectedItemId","setSelectedItemId","_useState9","_useState10","filteredItems","setFilteredItems","_useState11","_useState12","isModalOpen","setModalOpen","useEffect","fetchAdverts","page","indexOfLastItem","indexOfFirstItem","handleSearch","newFilteredItems","item","SearchForm","handleSubmit","event","preventDefault","handleMakeChange","target","value","handleRentalPriceChange","onSearch","CatalogItem","prevPage","ModalLearnMore","isOpen","closeModal"],"sourceRoot":""}