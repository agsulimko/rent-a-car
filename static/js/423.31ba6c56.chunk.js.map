{"version":3,"file":"static/js/423.31ba6c56.chunk.js","mappings":"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","sources":["components/Catalog/CatalogItem.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container } from \"styles/Container/Container\";\nimport {\n  ButtonHeardIcone,\n  ButtonLoadMore,\n  ButtonLearnMore,\n  CardItem,\n  CardList,\n  CardsTitle,\n  Img,\n  DivImg,\n  DivTextInfo,\n  SpanCardsTitle,\n  DivTitle,\n  PriceTitle,\n  Vector,\n  DivFirst,\n  DivSecond,\n  SvgHeard,\n  SvgHeardActive,\n} from \"./CatalogItem.styled\";\n\nimport substringsToCheck from \"./substringsToCheck\";\nimport sprite from \"../../image/sprite.svg\";\n\nconst ITEMS_PER_PAGE = 12;\nconst CatalogItem = ({ currentItems, handleLoadMore, handleLearnMore }) => {\n  const [favorites, setFavorites] = useState(\n    JSON.parse(localStorage.getItem(\"favorites\")) || []\n  );\n\n  const toggleFavorites = (id) => {\n    const updatedFavorites = favorites.includes(id)\n      ? favorites.filter((favoriteId) => favoriteId !== id)\n      : [...favorites, id];\n\n    setFavorites(updatedFavorites);\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n  };\n\n  return (\n    <Container>\n      <div className=\"div-cards-list\">\n        <CardList className=\"cards-list\">\n          {currentItems.map((cart, index) => (\n            <CardItem\n              key={index}\n              className=\"cards-item\"\n              data-category={cart.category}\n              data-aos=\"flip-left\"\n              data-aos-duration=\"1000\"\n            >\n              <picture>\n                <source srcSet={cart.make} type=\"image/webp\" />\n                <source srcSet={cart.make} type=\"image/jpeg\" />\n                <DivImg>\n                  <Img\n                    src={cart.img}\n                    width=\"401\"\n                    height=\"268\"\n                    alt={cart.make}\n                    className=\"card-img\"\n                    loading=\"lazy\"\n                  />\n                </DivImg>\n              </picture>\n              <div className=\"test-div\">\n                <ButtonHeardIcone\n                  type=\"button\"\n                  className=\"btn-heard-icone\"\n                  onClick={() => toggleFavorites(cart.id)}\n                >\n                  {favorites.includes(cart.id) ? (\n                    <SvgHeardActive>\n                      <use href={`${sprite}#icon-heard_active`}></use>\n                    </SvgHeardActive>\n                  ) : (\n                    <SvgHeard>\n                      <use href={`${sprite}#icon-heard`}></use>\n                    </SvgHeard>\n                  )}\n                </ButtonHeardIcone>\n              </div>\n              <DivTitle className=\"DivTitle\">\n                <CardsTitle className=\"cards-item-title\">\n                  {cart.make}\n                  {cart.model.length < 8 && (\n                    <SpanCardsTitle> {cart.model}</SpanCardsTitle>\n                  )}\n                  , {cart.year}\n                </CardsTitle>\n                <PriceTitle>{cart.rentalPrice}</PriceTitle>\n              </DivTitle>\n\n              <DivTextInfo className=\"div-text-info\">\n                <DivFirst className=\"DivFirst \">\n                  <p className=\"City\">\n                    {cart.address.split(\",\")[1].trim().split(\" \")[0]}\n                  </p>\n                  <Vector></Vector>\n                  <p className=\"Country\">\n                    {\n                      cart.address\n                        .split(\",\")\n                        .slice(2)\n                        .join(\",\")\n                        .trim()\n                        .split(\" \")[0]\n                    }\n                  </p>\n                  <Vector></Vector>\n                  <p className=\"rentalCompany\">{cart.rentalCompany}</p>\n                  {cart.rentalCompany.length < 19 && <Vector></Vector>}\n\n                  {cart.rentalCompany.length < 19 && (\n                    <p className=\"Class auto\">\n                      {cart.accessories\n                        .map((feature) =>\n                          feature.toLowerCase().includes(\"premium\")\n                            ? \"Premium\"\n                            : \"\"\n                        )\n                        .find((str) => str === \"Premium\") || \"\"}\n                    </p>\n                  )}\n                </DivFirst>\n                <DivSecond className=\"DivSecond \">\n                  <p> {cart.type} </p>\n                  <Vector></Vector>\n                  <p> {cart.make} </p>\n                  <Vector></Vector>\n                  <p> {cart.id} </p>\n                  {cart.type.length < 6 && <Vector></Vector>}\n                  {cart.type.length < 6 && (\n                    <p>\n                      {cart.accessories\n                        .map((feature) => {\n                          const foundSubstring = substringsToCheck.find(\n                            (substring) =>\n                              feature\n                                .toLowerCase()\n                                .includes(substring.toLowerCase())\n                          );\n\n                          return foundSubstring\n                            ? foundSubstring.charAt(0).toUpperCase() +\n                                foundSubstring.slice(1)\n                            : \"\";\n                        })\n                        .filter(Boolean)[0] || \"\"}\n                    </p>\n                  )}\n                </DivSecond>\n              </DivTextInfo>\n\n              <ButtonLearnMore\n                type=\"button\"\n                className=\"cards-item-btn\"\n                aria-label=\"Open modal Learn more\"\n                id={cart.id}\n                onClick={() => {\n                  handleLearnMore(cart.id);\n                }}\n              >\n                Learn more\n              </ButtonLearnMore>\n            </CardItem>\n          ))}\n        </CardList>\n        {currentItems.length > 0 && currentItems.length >= ITEMS_PER_PAGE && (\n          <ButtonLoadMore\n            type=\"button\"\n            className=\"cards-item-btn\"\n            onClick={handleLoadMore}\n          >\n            Load more\n          </ButtonLoadMore>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default CatalogItem;\n","// Catalog.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport fetchAdverts from \"../redux/thunks\";\nimport { selectAdverts } from \"../redux/selectors\";\nimport CatalogItem from \"components/Catalog/CatalogItem\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\n\nimport ModalLearnMore from \"components/Modal/ModalLearnMore\"; // Import the ModalLearnMore component\n\nimport { Container } from \"styles/Container/Container\";\n\nconst ITEMS_PER_PAGE = 12;\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n  const adverts = useSelector(selectAdverts) || [];\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedMake, setSelectedMake] = useState(\"\");\n  const [selectedRentalPrice, setSelectedRentalPrice] = useState(0);\n  const [selectedItemId, setSelectedItemId] = useState(null);\n  const [filteredItems, setFilteredItems] = useState([]);\n\n  const [isModalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    dispatch(fetchAdverts({ page: currentPage, make: selectedMake }));\n    // eslint-disable-next-line\n  }, [dispatch, currentPage, selectedMake]);\n\n  const indexOfLastItem = currentPage * ITEMS_PER_PAGE;\n  const indexOfFirstItem = indexOfLastItem - ITEMS_PER_PAGE;\n  const currentItems = adverts.slice(indexOfFirstItem, indexOfLastItem);\n\n  const handleSearch = () => {\n    const newFilteredItems = currentItems.filter((item) =>\n      selectedMake ? item.make === selectedMake : true\n    );\n    setFilteredItems(newFilteredItems);\n  };\n\n  const handleLoadMore = () => {\n    setCurrentPage((prevPage) => prevPage + 1);\n  };\n\n  const handleLearnMore = (id) => {\n    setSelectedItemId(id);\n\n    setModalOpen(true);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Your form submission logic\n    handleSearch();\n  };\n\n  const handleMakeChange = (event) => {\n    setSelectedMake(event.target.value);\n  };\n\n  const handleRentalPriceChange = (event) => {\n    setSelectedRentalPrice(event.target.value);\n  };\n\n  return (\n    <Container>\n      <SearchForm\n        handleSubmit={handleSubmit}\n        handleMakeChange={handleMakeChange}\n        handleRentalPriceChange={handleRentalPriceChange}\n        selectedMake={selectedMake}\n        selectedRentalPrice={selectedRentalPrice}\n        onSearch={handleSearch}\n      />\n      <CatalogItem\n        currentItems={filteredItems.length ? filteredItems : currentItems}\n        handleLoadMore={handleLoadMore}\n        handleLearnMore={handleLearnMore}\n      />\n      <ModalLearnMore\n        // isOpen={modalIsOpen}\n        isOpen={isModalOpen}\n        // closeModal={() => setModalIsOpen(false)}\n        closeModal={() => setModalOpen(false)}\n        currentItems={currentItems}\n        selectedItemId={selectedItemId}\n      />\n    </Container>\n  );\n};\n\nexport default Catalog;\n"],"names":["_ref","currentItems","handleLoadMore","handleLearnMore","_useState","useState","JSON","parse","localStorage","getItem","_useState2","_slicedToArray","favorites","setFavorites","_jsx","Container","children","_jsxs","className","CardList","map","cart","index","CardItem","category","srcSet","make","type","DivImg","Img","src","img","width","height","alt","loading","ButtonHeardIcone","onClick","id","updatedFavorites","includes","filter","favoriteId","concat","_toConsumableArray","setItem","stringify","toggleFavorites","SvgHeardActive","href","sprite","SvgHeard","DivTitle","CardsTitle","model","length","SpanCardsTitle","year","PriceTitle","rentalPrice","DivTextInfo","DivFirst","address","split","trim","Vector","slice","join","rentalCompany","accessories","feature","toLowerCase","find","str","DivSecond","foundSubstring","substringsToCheck","substring","charAt","toUpperCase","Boolean","ButtonLearnMore","ButtonLoadMore","dispatch","useDispatch","adverts","useSelector","selectAdverts","currentPage","setCurrentPage","_useState3","_useState4","selectedMake","setSelectedMake","_useState5","_useState6","selectedRentalPrice","setSelectedRentalPrice","_useState7","_useState8","selectedItemId","setSelectedItemId","_useState9","_useState10","filteredItems","setFilteredItems","_useState11","_useState12","isModalOpen","setModalOpen","useEffect","fetchAdverts","page","indexOfLastItem","indexOfFirstItem","handleSearch","newFilteredItems","item","SearchForm","handleSubmit","event","preventDefault","handleMakeChange","target","value","handleRentalPriceChange","onSearch","CatalogItem","prevPage","ModalLearnMore","isOpen","closeModal"],"sourceRoot":""}